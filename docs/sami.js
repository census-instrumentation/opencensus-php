
window.projectVersion = 'master';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:OpenCensus" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="OpenCensus.html">OpenCensus</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:OpenCensus_Core" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="OpenCensus/Core.html">Core</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:OpenCensus_Core_Context" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="OpenCensus/Core/Context.html">Context</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:OpenCensus_Trace" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="OpenCensus/Trace.html">Trace</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:OpenCensus_Trace_Exporter" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="OpenCensus/Trace/Exporter.html">Exporter</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:OpenCensus_Trace_Exporter_EchoExporter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Exporter/EchoExporter.html">EchoExporter</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Exporter_ExporterInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Exporter/ExporterInterface.html">ExporterInterface</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Exporter_FileExporter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Exporter/FileExporter.html">FileExporter</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Exporter_LoggerExporter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Exporter/LoggerExporter.html">LoggerExporter</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Exporter_NullExporter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Exporter/NullExporter.html">NullExporter</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Exporter_StackdriverExporter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Exporter/StackdriverExporter.html">StackdriverExporter</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Exporter_ZipkinExporter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Exporter/ZipkinExporter.html">ZipkinExporter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:OpenCensus_Trace_Integrations" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="OpenCensus/Trace/Integrations.html">Integrations</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:OpenCensus_Trace_Integrations_Guzzle" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="OpenCensus/Trace/Integrations/Guzzle.html">Guzzle</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:OpenCensus_Trace_Integrations_Guzzle_EventSubscriber" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Guzzle/EventSubscriber.html">EventSubscriber</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Guzzle_Middleware" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Guzzle/Middleware.html">Middleware</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Curl" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Curl.html">Curl</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Doctrine" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Doctrine.html">Doctrine</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Eloquent" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Eloquent.html">Eloquent</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Grpc" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Grpc.html">Grpc</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Guzzle" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Guzzle.html">Guzzle</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_IntegrationInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/IntegrationInterface.html">IntegrationInterface</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Laravel" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Laravel.html">Laravel</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Memcache" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Memcache.html">Memcache</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Memcached" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Memcached.html">Memcached</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Mysql" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Mysql.html">Mysql</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_PDO" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/PDO.html">PDO</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Postgres" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Postgres.html">Postgres</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Symfony" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Symfony.html">Symfony</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Integrations_Wordpress" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Integrations/Wordpress.html">Wordpress</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:OpenCensus_Trace_Propagator" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="OpenCensus/Trace/Propagator.html">Propagator</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:OpenCensus_Trace_Propagator_BinaryFormatter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Propagator/BinaryFormatter.html">BinaryFormatter</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Propagator_CloudTraceFormatter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Propagator/CloudTraceFormatter.html">CloudTraceFormatter</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Propagator_FormatterInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Propagator/FormatterInterface.html">FormatterInterface</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Propagator_GrpcMetadataPropagator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html">GrpcMetadataPropagator</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Propagator_HttpHeaderPropagator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Propagator/HttpHeaderPropagator.html">HttpHeaderPropagator</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Propagator_PropagatorInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Propagator/PropagatorInterface.html">PropagatorInterface</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Propagator_TraceContextFormatter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Propagator/TraceContextFormatter.html">TraceContextFormatter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:OpenCensus_Trace_Sampler" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="OpenCensus/Trace/Sampler.html">Sampler</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:OpenCensus_Trace_Sampler_AlwaysSampleSampler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Sampler/AlwaysSampleSampler.html">AlwaysSampleSampler</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Sampler_NeverSampleSampler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Sampler/NeverSampleSampler.html">NeverSampleSampler</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Sampler_ProbabilitySampler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Sampler/ProbabilitySampler.html">ProbabilitySampler</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Sampler_QpsSampler" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Sampler/QpsSampler.html">QpsSampler</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Sampler_SamplerFactory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Sampler/SamplerFactory.html">SamplerFactory</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Sampler_SamplerInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Sampler/SamplerInterface.html">SamplerInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:OpenCensus_Trace_Tracer" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="OpenCensus/Trace/Tracer.html">Tracer</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:OpenCensus_Trace_Tracer_ContextTracer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Tracer/ContextTracer.html">ContextTracer</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Tracer_ExtensionTracer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Tracer/ExtensionTracer.html">ExtensionTracer</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Tracer_NullTracer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Tracer/NullTracer.html">NullTracer</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Tracer_TracerInterface" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="OpenCensus/Trace/Tracer/TracerInterface.html">TracerInterface</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:OpenCensus_Trace_IdGeneratorTrait" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="OpenCensus/Trace/IdGeneratorTrait.html">IdGeneratorTrait</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_RequestHandler" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="OpenCensus/Trace/RequestHandler.html">RequestHandler</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_RequestTracer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="OpenCensus/Trace/RequestTracer.html">RequestTracer</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_Span" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="OpenCensus/Trace/Span.html">Span</a>                    </div>                </li>                            <li data-name="class:OpenCensus_Trace_SpanContext" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="OpenCensus/Trace/SpanContext.html">SpanContext</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "OpenCensus.html", "name": "OpenCensus", "doc": "Namespace OpenCensus"},{"type": "Namespace", "link": "OpenCensus/Core.html", "name": "OpenCensus\\Core", "doc": "Namespace OpenCensus\\Core"},{"type": "Namespace", "link": "OpenCensus/Trace.html", "name": "OpenCensus\\Trace", "doc": "Namespace OpenCensus\\Trace"},{"type": "Namespace", "link": "OpenCensus/Trace/Exporter.html", "name": "OpenCensus\\Trace\\Exporter", "doc": "Namespace OpenCensus\\Trace\\Exporter"},{"type": "Namespace", "link": "OpenCensus/Trace/Integrations.html", "name": "OpenCensus\\Trace\\Integrations", "doc": "Namespace OpenCensus\\Trace\\Integrations"},{"type": "Namespace", "link": "OpenCensus/Trace/Integrations/Guzzle.html", "name": "OpenCensus\\Trace\\Integrations\\Guzzle", "doc": "Namespace OpenCensus\\Trace\\Integrations\\Guzzle"},{"type": "Namespace", "link": "OpenCensus/Trace/Propagator.html", "name": "OpenCensus\\Trace\\Propagator", "doc": "Namespace OpenCensus\\Trace\\Propagator"},{"type": "Namespace", "link": "OpenCensus/Trace/Sampler.html", "name": "OpenCensus\\Trace\\Sampler", "doc": "Namespace OpenCensus\\Trace\\Sampler"},{"type": "Namespace", "link": "OpenCensus/Trace/Tracer.html", "name": "OpenCensus\\Trace\\Tracer", "doc": "Namespace OpenCensus\\Trace\\Tracer"},
            {"type": "Interface", "fromName": "OpenCensus\\Trace\\Exporter", "fromLink": "OpenCensus/Trace/Exporter.html", "link": "OpenCensus/Trace/Exporter/ExporterInterface.html", "name": "OpenCensus\\Trace\\Exporter\\ExporterInterface", "doc": "&quot;The ExporterInterface allows you to swap out the Trace reporting mechanism&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\ExporterInterface", "fromLink": "OpenCensus/Trace/Exporter/ExporterInterface.html", "link": "OpenCensus/Trace/Exporter/ExporterInterface.html#method_report", "name": "OpenCensus\\Trace\\Exporter\\ExporterInterface::report", "doc": "&quot;Report the provided Trace to a backend.&quot;"},
            
            {"type": "Interface", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/IntegrationInterface.html", "name": "OpenCensus\\Trace\\Integrations\\IntegrationInterface", "doc": "&quot;Common interface for enabling Trace integration for various frameworks and libraries.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\IntegrationInterface", "fromLink": "OpenCensus/Trace/Integrations/IntegrationInterface.html", "link": "OpenCensus/Trace/Integrations/IntegrationInterface.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\IntegrationInterface::load", "doc": "&quot;Static method to add instrumentation to a framework or library&quot;"},
            
            {"type": "Interface", "fromName": "OpenCensus\\Trace\\Propagator", "fromLink": "OpenCensus/Trace/Propagator.html", "link": "OpenCensus/Trace/Propagator/FormatterInterface.html", "name": "OpenCensus\\Trace\\Propagator\\FormatterInterface", "doc": "&quot;This interface lets us define serialization strategies for SpanContext.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\FormatterInterface", "fromLink": "OpenCensus/Trace/Propagator/FormatterInterface.html", "link": "OpenCensus/Trace/Propagator/FormatterInterface.html#method_deserialize", "name": "OpenCensus\\Trace\\Propagator\\FormatterInterface::deserialize", "doc": "&quot;Generate a SpanContext object from the Trace Context header&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\FormatterInterface", "fromLink": "OpenCensus/Trace/Propagator/FormatterInterface.html", "link": "OpenCensus/Trace/Propagator/FormatterInterface.html#method_serialize", "name": "OpenCensus\\Trace\\Propagator\\FormatterInterface::serialize", "doc": "&quot;Convert a SpanContext to header string&quot;"},
            
            {"type": "Interface", "fromName": "OpenCensus\\Trace\\Propagator", "fromLink": "OpenCensus/Trace/Propagator.html", "link": "OpenCensus/Trace/Propagator/PropagatorInterface.html", "name": "OpenCensus\\Trace\\Propagator\\PropagatorInterface", "doc": "&quot;This interface lets us define separate SpanContext Propagator formats. This interface is responsible for\nparsing and propagating the SpanContext to upstream and downstream requests.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\PropagatorInterface", "fromLink": "OpenCensus/Trace/Propagator/PropagatorInterface.html", "link": "OpenCensus/Trace/Propagator/PropagatorInterface.html#method_extract", "name": "OpenCensus\\Trace\\Propagator\\PropagatorInterface::extract", "doc": "&quot;Extract the SpanContext from some container&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\PropagatorInterface", "fromLink": "OpenCensus/Trace/Propagator/PropagatorInterface.html", "link": "OpenCensus/Trace/Propagator/PropagatorInterface.html#method_inject", "name": "OpenCensus\\Trace\\Propagator\\PropagatorInterface::inject", "doc": "&quot;Inject the SpanContext back into the response&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\PropagatorInterface", "fromLink": "OpenCensus/Trace/Propagator/PropagatorInterface.html", "link": "OpenCensus/Trace/Propagator/PropagatorInterface.html#method_formatter", "name": "OpenCensus\\Trace\\Propagator\\PropagatorInterface::formatter", "doc": "&quot;Fetch the formatter for propagating the SpanContext&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\PropagatorInterface", "fromLink": "OpenCensus/Trace/Propagator/PropagatorInterface.html", "link": "OpenCensus/Trace/Propagator/PropagatorInterface.html#method_key", "name": "OpenCensus\\Trace\\Propagator\\PropagatorInterface::key", "doc": "&quot;Return the key used to propagate the SpanContext&quot;"},
            
            {"type": "Interface", "fromName": "OpenCensus\\Trace\\Sampler", "fromLink": "OpenCensus/Trace/Sampler.html", "link": "OpenCensus/Trace/Sampler/SamplerInterface.html", "name": "OpenCensus\\Trace\\Sampler\\SamplerInterface", "doc": "&quot;This interface lets us customize the sampling logic.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\SamplerInterface", "fromLink": "OpenCensus/Trace/Sampler/SamplerInterface.html", "link": "OpenCensus/Trace/Sampler/SamplerInterface.html#method_shouldSample", "name": "OpenCensus\\Trace\\Sampler\\SamplerInterface::shouldSample", "doc": "&quot;Returns true if we whould sample the request&quot;"},
            
            {"type": "Interface", "fromName": "OpenCensus\\Trace\\Tracer", "fromLink": "OpenCensus/Trace/Tracer.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface", "doc": "&quot;This interface allows you to use the null object pattern for your tracer.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_inSpan", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::inSpan", "doc": "&quot;Instrument a callable by creating a Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_startSpan", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::startSpan", "doc": "&quot;Start a new Span. The start time is already set to the current time.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_endSpan", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::endSpan", "doc": "&quot;Finish the current context&#039;s Span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_context", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::context", "doc": "&quot;Return the current context.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_spans", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::spans", "doc": "&quot;Return the spans collected.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_addLabel", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::addLabel", "doc": "&quot;Add a label to the current Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_addRootLabel", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::addRootLabel", "doc": "&quot;Add a label to the primary Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_enabled", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::enabled", "doc": "&quot;Whether or not this tracer is enabled.&quot;"},
            
            
            {"type": "Class", "fromName": "OpenCensus\\Core", "fromLink": "OpenCensus/Core.html", "link": "OpenCensus/Core/Context.html", "name": "OpenCensus\\Core\\Context", "doc": "&quot;This class is an implementation of a generic context.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Core\\Context", "fromLink": "OpenCensus/Core/Context.html", "link": "OpenCensus/Core/Context.html#method___construct", "name": "OpenCensus\\Core\\Context::__construct", "doc": "&quot;Creates a new Context.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Core\\Context", "fromLink": "OpenCensus/Core/Context.html", "link": "OpenCensus/Core/Context.html#method_withValue", "name": "OpenCensus\\Core\\Context::withValue", "doc": "&quot;Creates a new context with the given key\/value set.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Core\\Context", "fromLink": "OpenCensus/Core/Context.html", "link": "OpenCensus/Core/Context.html#method_withValues", "name": "OpenCensus\\Core\\Context::withValues", "doc": "&quot;Creates a new context with the given key\/values.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Core\\Context", "fromLink": "OpenCensus/Core/Context.html", "link": "OpenCensus/Core/Context.html#method_value", "name": "OpenCensus\\Core\\Context::value", "doc": "&quot;Fetches the value for a given key in this context. Returns the provided\ndefault if not set.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Core\\Context", "fromLink": "OpenCensus/Core/Context.html", "link": "OpenCensus/Core/Context.html#method_attach", "name": "OpenCensus\\Core\\Context::attach", "doc": "&quot;Attaches this context, thus entering a new scope within which this\ncontext is current(). The previously current context is returned.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Core\\Context", "fromLink": "OpenCensus/Core/Context.html", "link": "OpenCensus/Core/Context.html#method_detach", "name": "OpenCensus\\Core\\Context::detach", "doc": "&quot;Reverses an attach(), restoring the previous context and exiting the\ncurrent scope.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Core\\Context", "fromLink": "OpenCensus/Core/Context.html", "link": "OpenCensus/Core/Context.html#method_values", "name": "OpenCensus\\Core\\Context::values", "doc": "&quot;Returns all the contained data.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Core\\Context", "fromLink": "OpenCensus/Core/Context.html", "link": "OpenCensus/Core/Context.html#method_current", "name": "OpenCensus\\Core\\Context::current", "doc": "&quot;Returns the context associated with the current scope, will never return\nnull.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Core\\Context", "fromLink": "OpenCensus/Core/Context.html", "link": "OpenCensus/Core/Context.html#method_background", "name": "OpenCensus\\Core\\Context::background", "doc": "&quot;Returns an empty context.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Core\\Context", "fromLink": "OpenCensus/Core/Context.html", "link": "OpenCensus/Core/Context.html#method_reset", "name": "OpenCensus\\Core\\Context::reset", "doc": "&quot;Resets the context to an initial state. This is generally used only for\ntesting.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Exporter", "fromLink": "OpenCensus/Trace/Exporter.html", "link": "OpenCensus/Trace/Exporter/EchoExporter.html", "name": "OpenCensus\\Trace\\Exporter\\EchoExporter", "doc": "&quot;This implementation of the ExporterInterface uses &lt;code&gt;print_r&lt;\/code&gt; to output\nthe trace&#039;s representation to stdout.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\EchoExporter", "fromLink": "OpenCensus/Trace/Exporter/EchoExporter.html", "link": "OpenCensus/Trace/Exporter/EchoExporter.html#method_report", "name": "OpenCensus\\Trace\\Exporter\\EchoExporter::report", "doc": "&quot;Report the provided Trace to a backend.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Exporter", "fromLink": "OpenCensus/Trace/Exporter.html", "link": "OpenCensus/Trace/Exporter/ExporterInterface.html", "name": "OpenCensus\\Trace\\Exporter\\ExporterInterface", "doc": "&quot;The ExporterInterface allows you to swap out the Trace reporting mechanism&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\ExporterInterface", "fromLink": "OpenCensus/Trace/Exporter/ExporterInterface.html", "link": "OpenCensus/Trace/Exporter/ExporterInterface.html#method_report", "name": "OpenCensus\\Trace\\Exporter\\ExporterInterface::report", "doc": "&quot;Report the provided Trace to a backend.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Exporter", "fromLink": "OpenCensus/Trace/Exporter.html", "link": "OpenCensus/Trace/Exporter/FileExporter.html", "name": "OpenCensus\\Trace\\Exporter\\FileExporter", "doc": "&quot;This implementation of the ExporterInterface appends a json\nrepresentation of the trace to a file.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\FileExporter", "fromLink": "OpenCensus/Trace/Exporter/FileExporter.html", "link": "OpenCensus/Trace/Exporter/FileExporter.html#method___construct", "name": "OpenCensus\\Trace\\Exporter\\FileExporter::__construct", "doc": "&quot;Create a new EchoExporter&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\FileExporter", "fromLink": "OpenCensus/Trace/Exporter/FileExporter.html", "link": "OpenCensus/Trace/Exporter/FileExporter.html#method_report", "name": "OpenCensus\\Trace\\Exporter\\FileExporter::report", "doc": "&quot;Report the provided Trace to a backend.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Exporter", "fromLink": "OpenCensus/Trace/Exporter.html", "link": "OpenCensus/Trace/Exporter/LoggerExporter.html", "name": "OpenCensus\\Trace\\Exporter\\LoggerExporter", "doc": "&quot;This implementation of the ExporterInterface appends a json\nrepresentation of the trace to a file.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\LoggerExporter", "fromLink": "OpenCensus/Trace/Exporter/LoggerExporter.html", "link": "OpenCensus/Trace/Exporter/LoggerExporter.html#method___construct", "name": "OpenCensus\\Trace\\Exporter\\LoggerExporter::__construct", "doc": "&quot;Create a new LoggerExporter&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\LoggerExporter", "fromLink": "OpenCensus/Trace/Exporter/LoggerExporter.html", "link": "OpenCensus/Trace/Exporter/LoggerExporter.html#method_report", "name": "OpenCensus\\Trace\\Exporter\\LoggerExporter::report", "doc": "&quot;Report the provided Trace to a backend.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Exporter", "fromLink": "OpenCensus/Trace/Exporter.html", "link": "OpenCensus/Trace/Exporter/NullExporter.html", "name": "OpenCensus\\Trace\\Exporter\\NullExporter", "doc": "&quot;This implementation of the ExporterInterface does nothing.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\NullExporter", "fromLink": "OpenCensus/Trace/Exporter/NullExporter.html", "link": "OpenCensus/Trace/Exporter/NullExporter.html#method_report", "name": "OpenCensus\\Trace\\Exporter\\NullExporter::report", "doc": "&quot;Does nothing.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Exporter", "fromLink": "OpenCensus/Trace/Exporter.html", "link": "OpenCensus/Trace/Exporter/StackdriverExporter.html", "name": "OpenCensus\\Trace\\Exporter\\StackdriverExporter", "doc": "&quot;This implementation of the ExporterInterface use the BatchRunner to provide\nreporting of Traces and their Spans to Google Cloud Stackdriver Trace.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\StackdriverExporter", "fromLink": "OpenCensus/Trace/Exporter/StackdriverExporter.html", "link": "OpenCensus/Trace/Exporter/StackdriverExporter.html#method___construct", "name": "OpenCensus\\Trace\\Exporter\\StackdriverExporter::__construct", "doc": "&quot;Create a TraceExporter that utilizes background batching.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\StackdriverExporter", "fromLink": "OpenCensus/Trace/Exporter/StackdriverExporter.html", "link": "OpenCensus/Trace/Exporter/StackdriverExporter.html#method_report", "name": "OpenCensus\\Trace\\Exporter\\StackdriverExporter::report", "doc": "&quot;Report the provided Trace to a backend.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\StackdriverExporter", "fromLink": "OpenCensus/Trace/Exporter/StackdriverExporter.html", "link": "OpenCensus/Trace/Exporter/StackdriverExporter.html#method_processSpans", "name": "OpenCensus\\Trace\\Exporter\\StackdriverExporter::processSpans", "doc": "&quot;Perform any pre-conversion modification to the spans&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\StackdriverExporter", "fromLink": "OpenCensus/Trace/Exporter/StackdriverExporter.html", "link": "OpenCensus/Trace/Exporter/StackdriverExporter.html#method_convertSpans", "name": "OpenCensus\\Trace\\Exporter\\StackdriverExporter::convertSpans", "doc": "&quot;Convert spans into Zipkin&#039;s expected JSON output format.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\StackdriverExporter", "fromLink": "OpenCensus/Trace/Exporter/StackdriverExporter.html", "link": "OpenCensus/Trace/Exporter/StackdriverExporter.html#method_getCallback", "name": "OpenCensus\\Trace\\Exporter\\StackdriverExporter::getCallback", "doc": "&quot;Returns an array representation of a callback which will be used to write\nbatch items.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Exporter", "fromLink": "OpenCensus/Trace/Exporter.html", "link": "OpenCensus/Trace/Exporter/ZipkinExporter.html", "name": "OpenCensus\\Trace\\Exporter\\ZipkinExporter", "doc": "&quot;This implementation of the ExporterInterface appends a json\nrepresentation of the trace to a file.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\ZipkinExporter", "fromLink": "OpenCensus/Trace/Exporter/ZipkinExporter.html", "link": "OpenCensus/Trace/Exporter/ZipkinExporter.html#method___construct", "name": "OpenCensus\\Trace\\Exporter\\ZipkinExporter::__construct", "doc": "&quot;Create a new ZipkinExporter&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\ZipkinExporter", "fromLink": "OpenCensus/Trace/Exporter/ZipkinExporter.html", "link": "OpenCensus/Trace/Exporter/ZipkinExporter.html#method_report", "name": "OpenCensus\\Trace\\Exporter\\ZipkinExporter::report", "doc": "&quot;Report the provided Trace to a backend.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Exporter\\ZipkinExporter", "fromLink": "OpenCensus/Trace/Exporter/ZipkinExporter.html", "link": "OpenCensus/Trace/Exporter/ZipkinExporter.html#method_convertSpans", "name": "OpenCensus\\Trace\\Exporter\\ZipkinExporter::convertSpans", "doc": "&quot;Convert spans into Zipkin&#039;s expected JSON output format. See http:\/\/zipkin.io\/zipkin-api\/#\/default\/post_spans\nfor output format.&quot;"},
            
            {"type": "Trait", "fromName": "OpenCensus\\Trace", "fromLink": "OpenCensus/Trace.html", "link": "OpenCensus/Trace/IdGeneratorTrait.html", "name": "OpenCensus\\Trace\\IdGeneratorTrait", "doc": "&quot;Trait which provides helper methods for generating trace identifiers.&quot;"},
                    
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Curl.html", "name": "OpenCensus\\Trace\\Integrations\\Curl", "doc": "&quot;This class handles instrumenting curl requests using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Curl", "fromLink": "OpenCensus/Trace/Integrations/Curl.html", "link": "OpenCensus/Trace/Integrations/Curl.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Curl::load", "doc": "&quot;Static method to add instrumentation to curl requests&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Curl", "fromLink": "OpenCensus/Trace/Integrations/Curl.html", "link": "OpenCensus/Trace/Integrations/Curl.html#method_handleCurlResource", "name": "OpenCensus\\Trace\\Integrations\\Curl::handleCurlResource", "doc": "&quot;Handle extracting the uri from a given curl resource handler&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Doctrine.html", "name": "OpenCensus\\Trace\\Integrations\\Doctrine", "doc": "&quot;This class handles instrumenting the Doctrine ORM queries using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Doctrine", "fromLink": "OpenCensus/Trace/Integrations/Doctrine.html", "link": "OpenCensus/Trace/Integrations/Doctrine.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Doctrine::load", "doc": "&quot;Static method to add instrumentation to Doctrine ORM calls&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Eloquent.html", "name": "OpenCensus\\Trace\\Integrations\\Eloquent", "doc": "&quot;This class handles instrumenting the Eloquent ORM queries using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Eloquent", "fromLink": "OpenCensus/Trace/Integrations/Eloquent.html", "link": "OpenCensus/Trace/Integrations/Eloquent.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Eloquent::load", "doc": "&quot;Static method to add instrumentation to Eloquent ORM calls&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Grpc.html", "name": "OpenCensus\\Trace\\Integrations\\Grpc", "doc": "&quot;This class handles instrumenting grpc requests using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Grpc", "fromLink": "OpenCensus/Trace/Integrations/Grpc.html", "link": "OpenCensus/Trace/Integrations/Grpc.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Grpc::load", "doc": "&quot;Static method to add instrumentation to grpc requests&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Grpc", "fromLink": "OpenCensus/Trace/Integrations/Grpc.html", "link": "OpenCensus/Trace/Integrations/Grpc.html#method_updateMetadata", "name": "OpenCensus\\Trace\\Integrations\\Grpc::updateMetadata", "doc": "&quot;Update metadata handler for grpc clients.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Guzzle.html", "name": "OpenCensus\\Trace\\Integrations\\Guzzle", "doc": "&quot;This class handles instrumenting Guzzle http synchronous requests using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle", "fromLink": "OpenCensus/Trace/Integrations/Guzzle.html", "link": "OpenCensus/Trace/Integrations/Guzzle.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Guzzle::load", "doc": "&quot;Static method to add instrumentation to Guzzle http synchronous requests&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle", "fromLink": "OpenCensus/Trace/Integrations/Guzzle.html", "link": "OpenCensus/Trace/Integrations/Guzzle.html#method_loadGuzzle5", "name": "OpenCensus\\Trace\\Integrations\\Guzzle::loadGuzzle5", "doc": "&quot;Add Guzzle 5 specific integrations&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle", "fromLink": "OpenCensus/Trace/Integrations/Guzzle.html", "link": "OpenCensus/Trace/Integrations/Guzzle.html#method_loadGuzzle6", "name": "OpenCensus\\Trace\\Integrations\\Guzzle::loadGuzzle6", "doc": "&quot;Add Guzzle 6 specific integrations&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle", "fromLink": "OpenCensus/Trace/Integrations/Guzzle.html", "link": "OpenCensus/Trace/Integrations/Guzzle/EventSubscriber.html", "name": "OpenCensus\\Trace\\Integrations\\Guzzle\\EventSubscriber", "doc": "&quot;This class handles integration with GuzzleHttp 5. Attaching this EventSubscriber to\nyour Guzzle client, will enable distrubted tracing by passing along the trace context\nheader and will also create trace spans for all outgoing requests.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle\\EventSubscriber", "fromLink": "OpenCensus/Trace/Integrations/Guzzle/EventSubscriber.html", "link": "OpenCensus/Trace/Integrations/Guzzle/EventSubscriber.html#method___construct", "name": "OpenCensus\\Trace\\Integrations\\Guzzle\\EventSubscriber::__construct", "doc": "&quot;Create a new Guzzle event listener that creates trace spans and propagates the current\ntrace context to the downstream request.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle\\EventSubscriber", "fromLink": "OpenCensus/Trace/Integrations/Guzzle/EventSubscriber.html", "link": "OpenCensus/Trace/Integrations/Guzzle/EventSubscriber.html#method_getEvents", "name": "OpenCensus\\Trace\\Integrations\\Guzzle\\EventSubscriber::getEvents", "doc": "&quot;Returns an array of event names this subscriber wants to listen to.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle\\EventSubscriber", "fromLink": "OpenCensus/Trace/Integrations/Guzzle/EventSubscriber.html", "link": "OpenCensus/Trace/Integrations/Guzzle/EventSubscriber.html#method_onBefore", "name": "OpenCensus\\Trace\\Integrations\\Guzzle\\EventSubscriber::onBefore", "doc": "&quot;Handler for the BeforeEvent request lifecycle event. Adds the current trace context\nas the trace context header. Also starts a span representing this outgoing http request.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle\\EventSubscriber", "fromLink": "OpenCensus/Trace/Integrations/Guzzle/EventSubscriber.html", "link": "OpenCensus/Trace/Integrations/Guzzle/EventSubscriber.html#method_onEnd", "name": "OpenCensus\\Trace\\Integrations\\Guzzle\\EventSubscriber::onEnd", "doc": "&quot;Handler for the EndEvent request lifecycle event. Ends the current span which should be\nthe span started in the BeforeEvent handler.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle", "fromLink": "OpenCensus/Trace/Integrations/Guzzle.html", "link": "OpenCensus/Trace/Integrations/Guzzle/Middleware.html", "name": "OpenCensus\\Trace\\Integrations\\Guzzle\\Middleware", "doc": "&quot;This class handles integration with GuzzleHttp 6. Adding this middleware to\nyour Guzzle client, will enable distrubted tracing by passing along the trace context\nheader and will also create trace spans for all outgoing requests.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle\\Middleware", "fromLink": "OpenCensus/Trace/Integrations/Guzzle/Middleware.html", "link": "OpenCensus/Trace/Integrations/Guzzle/Middleware.html#method___construct", "name": "OpenCensus\\Trace\\Integrations\\Guzzle\\Middleware::__construct", "doc": "&quot;Create a new Guzzle middleware that creates trace spans and propagates the current\ntrace context to the downstream request.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Guzzle\\Middleware", "fromLink": "OpenCensus/Trace/Integrations/Guzzle/Middleware.html", "link": "OpenCensus/Trace/Integrations/Guzzle/Middleware.html#method___invoke", "name": "OpenCensus\\Trace\\Integrations\\Guzzle\\Middleware::__invoke", "doc": "&quot;Magic method which makes this object callable. Guzzle middleware are expected to be\ncallables.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/IntegrationInterface.html", "name": "OpenCensus\\Trace\\Integrations\\IntegrationInterface", "doc": "&quot;Common interface for enabling Trace integration for various frameworks and libraries.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\IntegrationInterface", "fromLink": "OpenCensus/Trace/Integrations/IntegrationInterface.html", "link": "OpenCensus/Trace/Integrations/IntegrationInterface.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\IntegrationInterface::load", "doc": "&quot;Static method to add instrumentation to a framework or library&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Laravel.html", "name": "OpenCensus\\Trace\\Integrations\\Laravel", "doc": "&quot;This class handles instrumenting the Laravel framework&#039;s standard stack using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Laravel", "fromLink": "OpenCensus/Trace/Integrations/Laravel.html", "link": "OpenCensus/Trace/Integrations/Laravel.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Laravel::load", "doc": "&quot;Static method to add instrumentation to the Laravel framework&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Memcache.html", "name": "OpenCensus\\Trace\\Integrations\\Memcache", "doc": "&quot;This class handles instrumenting memcache requests using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Memcache", "fromLink": "OpenCensus/Trace/Integrations/Memcache.html", "link": "OpenCensus/Trace/Integrations/Memcache.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Memcache::load", "doc": "&quot;Static method to add instrumentation to memcache requests&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Memcache", "fromLink": "OpenCensus/Trace/Integrations/Memcache.html", "link": "OpenCensus/Trace/Integrations/Memcache.html#method_handleLabels", "name": "OpenCensus\\Trace\\Integrations\\Memcache::handleLabels", "doc": "&quot;Handle converting the key or keys provided to a Memcache function into a comma-separated label&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Memcache", "fromLink": "OpenCensus/Trace/Integrations/Memcache.html", "link": "OpenCensus/Trace/Integrations/Memcache.html#method_handleConnect", "name": "OpenCensus\\Trace\\Integrations\\Memcache::handleConnect", "doc": "&quot;Extract the host as a label&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Memcached.html", "name": "OpenCensus\\Trace\\Integrations\\Memcached", "doc": "&quot;This class handles instrumenting memcache requests using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Memcached", "fromLink": "OpenCensus/Trace/Integrations/Memcached.html", "link": "OpenCensus/Trace/Integrations/Memcached.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Memcached::load", "doc": "&quot;Static method to add instrumentation to memcache requests&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Memcached", "fromLink": "OpenCensus/Trace/Integrations/Memcached.html", "link": "OpenCensus/Trace/Integrations/Memcached.html#method_handleLabels", "name": "OpenCensus\\Trace\\Integrations\\Memcached::handleLabels", "doc": "&quot;Handle converting the key or keys provided to a Memcache function into a comma-separated label&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Memcached", "fromLink": "OpenCensus/Trace/Integrations/Memcached.html", "link": "OpenCensus/Trace/Integrations/Memcached.html#method_handleLabelsByKey", "name": "OpenCensus\\Trace\\Integrations\\Memcached::handleLabelsByKey", "doc": "&quot;Handle converting the key or keys provided to a Memcache function into a comma-separated label&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Memcached", "fromLink": "OpenCensus/Trace/Integrations/Memcached.html", "link": "OpenCensus/Trace/Integrations/Memcached.html#method_handleCas", "name": "OpenCensus\\Trace\\Integrations\\Memcached::handleCas", "doc": "&quot;Handle converting the key and check and set token to labels&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Memcached", "fromLink": "OpenCensus/Trace/Integrations/Memcached.html", "link": "OpenCensus/Trace/Integrations/Memcached.html#method_handleCasByKey", "name": "OpenCensus\\Trace\\Integrations\\Memcached::handleCasByKey", "doc": "&quot;Handle converting the key and check and set token to labels&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Memcached", "fromLink": "OpenCensus/Trace/Integrations/Memcached.html", "link": "OpenCensus/Trace/Integrations/Memcached.html#method_handleSetMulti", "name": "OpenCensus\\Trace\\Integrations\\Memcached::handleSetMulti", "doc": "&quot;Extract key label from a setMulti command&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Memcached", "fromLink": "OpenCensus/Trace/Integrations/Memcached.html", "link": "OpenCensus/Trace/Integrations/Memcached.html#method_handleSetMultiByKey", "name": "OpenCensus\\Trace\\Integrations\\Memcached::handleSetMultiByKey", "doc": "&quot;Extract key label from a setMulti command&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Mysql.html", "name": "OpenCensus\\Trace\\Integrations\\Mysql", "doc": "&quot;This class handles instrumenting mysql requests using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Mysql", "fromLink": "OpenCensus/Trace/Integrations/Mysql.html", "link": "OpenCensus/Trace/Integrations/Mysql.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Mysql::load", "doc": "&quot;Static method to add instrumentation to mysql requests&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/PDO.html", "name": "OpenCensus\\Trace\\Integrations\\PDO", "doc": "&quot;This class handles instrumenting PDO requests using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\PDO", "fromLink": "OpenCensus/Trace/Integrations/PDO.html", "link": "OpenCensus/Trace/Integrations/PDO.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\PDO::load", "doc": "&quot;Static method to add instrumentation to the PDO requests&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\PDO", "fromLink": "OpenCensus/Trace/Integrations/PDO.html", "link": "OpenCensus/Trace/Integrations/PDO.html#method_handleQuery", "name": "OpenCensus\\Trace\\Integrations\\PDO::handleQuery", "doc": "&quot;Handle extracting the SQL query from the first argument&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\PDO", "fromLink": "OpenCensus/Trace/Integrations/PDO.html", "link": "OpenCensus/Trace/Integrations/PDO.html#method_handleConnect", "name": "OpenCensus\\Trace\\Integrations\\PDO::handleConnect", "doc": "&quot;Handle extracting the Data Source Name (DSN) from the constructor aruments to PDO&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\PDO", "fromLink": "OpenCensus/Trace/Integrations/PDO.html", "link": "OpenCensus/Trace/Integrations/PDO.html#method_handleStatementExecute", "name": "OpenCensus\\Trace\\Integrations\\PDO::handleStatementExecute", "doc": "&quot;Handle extracting the SQL query from a PDOStatement instance&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Postgres.html", "name": "OpenCensus\\Trace\\Integrations\\Postgres", "doc": "&quot;This class handles instrumenting postgres requests using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Postgres", "fromLink": "OpenCensus/Trace/Integrations/Postgres.html", "link": "OpenCensus/Trace/Integrations/Postgres.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Postgres::load", "doc": "&quot;Static method to add instrumentation to the postgres requests&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Symfony.html", "name": "OpenCensus\\Trace\\Integrations\\Symfony", "doc": "&quot;This class handles instrumenting the Symfony framework&#039;s standard stack using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Symfony", "fromLink": "OpenCensus/Trace/Integrations/Symfony.html", "link": "OpenCensus/Trace/Integrations/Symfony.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Symfony::load", "doc": "&quot;Static method to add instrumentation to the Symfony framework&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Integrations", "fromLink": "OpenCensus/Trace/Integrations.html", "link": "OpenCensus/Trace/Integrations/Wordpress.html", "name": "OpenCensus\\Trace\\Integrations\\Wordpress", "doc": "&quot;This class handles instrumenting the Wordpress framework&#039;s standard stack using the opencensus extension.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Integrations\\Wordpress", "fromLink": "OpenCensus/Trace/Integrations/Wordpress.html", "link": "OpenCensus/Trace/Integrations/Wordpress.html#method_load", "name": "OpenCensus\\Trace\\Integrations\\Wordpress::load", "doc": "&quot;Static method to add instrumentation to the Wordpress framework&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Propagator", "fromLink": "OpenCensus/Trace/Propagator.html", "link": "OpenCensus/Trace/Propagator/BinaryFormatter.html", "name": "OpenCensus\\Trace\\Propagator\\BinaryFormatter", "doc": "&quot;This propagator contains the method for serializaing and deserializing\nSpanContext over a binary format.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\BinaryFormatter", "fromLink": "OpenCensus/Trace/Propagator/BinaryFormatter.html", "link": "OpenCensus/Trace/Propagator/BinaryFormatter.html#method_deserialize", "name": "OpenCensus\\Trace\\Propagator\\BinaryFormatter::deserialize", "doc": "&quot;Generate a SpanContext object from the Trace Context header&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\BinaryFormatter", "fromLink": "OpenCensus/Trace/Propagator/BinaryFormatter.html", "link": "OpenCensus/Trace/Propagator/BinaryFormatter.html#method_serialize", "name": "OpenCensus\\Trace\\Propagator\\BinaryFormatter::serialize", "doc": "&quot;Convert a SpanContext to header string&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Propagator", "fromLink": "OpenCensus/Trace/Propagator.html", "link": "OpenCensus/Trace/Propagator/CloudTraceFormatter.html", "name": "OpenCensus\\Trace\\Propagator\\CloudTraceFormatter", "doc": "&quot;This format using a human readable string encoding to propagate SpanContext.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\CloudTraceFormatter", "fromLink": "OpenCensus/Trace/Propagator/CloudTraceFormatter.html", "link": "OpenCensus/Trace/Propagator/CloudTraceFormatter.html#method_deserialize", "name": "OpenCensus\\Trace\\Propagator\\CloudTraceFormatter::deserialize", "doc": "&quot;Generate a SpanContext object from the Trace Context header&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\CloudTraceFormatter", "fromLink": "OpenCensus/Trace/Propagator/CloudTraceFormatter.html", "link": "OpenCensus/Trace/Propagator/CloudTraceFormatter.html#method_serialize", "name": "OpenCensus\\Trace\\Propagator\\CloudTraceFormatter::serialize", "doc": "&quot;Convert a SpanContext to header string&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Propagator", "fromLink": "OpenCensus/Trace/Propagator.html", "link": "OpenCensus/Trace/Propagator/FormatterInterface.html", "name": "OpenCensus\\Trace\\Propagator\\FormatterInterface", "doc": "&quot;This interface lets us define serialization strategies for SpanContext.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\FormatterInterface", "fromLink": "OpenCensus/Trace/Propagator/FormatterInterface.html", "link": "OpenCensus/Trace/Propagator/FormatterInterface.html#method_deserialize", "name": "OpenCensus\\Trace\\Propagator\\FormatterInterface::deserialize", "doc": "&quot;Generate a SpanContext object from the Trace Context header&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\FormatterInterface", "fromLink": "OpenCensus/Trace/Propagator/FormatterInterface.html", "link": "OpenCensus/Trace/Propagator/FormatterInterface.html#method_serialize", "name": "OpenCensus\\Trace\\Propagator\\FormatterInterface::serialize", "doc": "&quot;Convert a SpanContext to header string&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Propagator", "fromLink": "OpenCensus/Trace/Propagator.html", "link": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html", "name": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator", "doc": "&quot;This propagator contains the logic for propagating SpanContext over\ngrpc using its request metadata. It will default to using the BinaryFormatter\nto serialize\/deserialize SpanContext.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator", "fromLink": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html", "link": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html#method___construct", "name": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator::__construct", "doc": "&quot;Create a new GrpcMetadataPropagator&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator", "fromLink": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html", "link": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html#method_extract", "name": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator::extract", "doc": "&quot;Generate a SpanContext object from the all the HTTP headers&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator", "fromLink": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html", "link": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html#method_inject", "name": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator::inject", "doc": "&quot;Persiste the current SpanContext back into the results of this request&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator", "fromLink": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html", "link": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html#method_formatter", "name": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator::formatter", "doc": "&quot;Fetch the formatter for propagating the SpanContext&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator", "fromLink": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html", "link": "OpenCensus/Trace/Propagator/GrpcMetadataPropagator.html#method_key", "name": "OpenCensus\\Trace\\Propagator\\GrpcMetadataPropagator::key", "doc": "&quot;Return the key used to propagate the SpanContext&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Propagator", "fromLink": "OpenCensus/Trace/Propagator.html", "link": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html", "name": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator", "doc": "&quot;This propagator uses HTTP headers to propagate SpanContext over HTTP.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator", "fromLink": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html", "link": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html#method___construct", "name": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator::__construct", "doc": "&quot;Create a new HttpHeaderPropagator&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator", "fromLink": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html", "link": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html#method_extract", "name": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator::extract", "doc": "&quot;Generate a SpanContext object from the all the HTTP headers&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator", "fromLink": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html", "link": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html#method_inject", "name": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator::inject", "doc": "&quot;Persiste the current SpanContext back into the results of this request&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator", "fromLink": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html", "link": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html#method_formatter", "name": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator::formatter", "doc": "&quot;Returns the current formatter&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator", "fromLink": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html", "link": "OpenCensus/Trace/Propagator/HttpHeaderPropagator.html#method_key", "name": "OpenCensus\\Trace\\Propagator\\HttpHeaderPropagator::key", "doc": "&quot;Return the key used to propagate the SpanContext&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Propagator", "fromLink": "OpenCensus/Trace/Propagator.html", "link": "OpenCensus/Trace/Propagator/PropagatorInterface.html", "name": "OpenCensus\\Trace\\Propagator\\PropagatorInterface", "doc": "&quot;This interface lets us define separate SpanContext Propagator formats. This interface is responsible for\nparsing and propagating the SpanContext to upstream and downstream requests.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\PropagatorInterface", "fromLink": "OpenCensus/Trace/Propagator/PropagatorInterface.html", "link": "OpenCensus/Trace/Propagator/PropagatorInterface.html#method_extract", "name": "OpenCensus\\Trace\\Propagator\\PropagatorInterface::extract", "doc": "&quot;Extract the SpanContext from some container&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\PropagatorInterface", "fromLink": "OpenCensus/Trace/Propagator/PropagatorInterface.html", "link": "OpenCensus/Trace/Propagator/PropagatorInterface.html#method_inject", "name": "OpenCensus\\Trace\\Propagator\\PropagatorInterface::inject", "doc": "&quot;Inject the SpanContext back into the response&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\PropagatorInterface", "fromLink": "OpenCensus/Trace/Propagator/PropagatorInterface.html", "link": "OpenCensus/Trace/Propagator/PropagatorInterface.html#method_formatter", "name": "OpenCensus\\Trace\\Propagator\\PropagatorInterface::formatter", "doc": "&quot;Fetch the formatter for propagating the SpanContext&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\PropagatorInterface", "fromLink": "OpenCensus/Trace/Propagator/PropagatorInterface.html", "link": "OpenCensus/Trace/Propagator/PropagatorInterface.html#method_key", "name": "OpenCensus\\Trace\\Propagator\\PropagatorInterface::key", "doc": "&quot;Return the key used to propagate the SpanContext&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Propagator", "fromLink": "OpenCensus/Trace/Propagator.html", "link": "OpenCensus/Trace/Propagator/TraceContextFormatter.html", "name": "OpenCensus\\Trace\\Propagator\\TraceContextFormatter", "doc": "&quot;This format using a human readable string encoding to propagate SpanContext.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\TraceContextFormatter", "fromLink": "OpenCensus/Trace/Propagator/TraceContextFormatter.html", "link": "OpenCensus/Trace/Propagator/TraceContextFormatter.html#method_deserialize", "name": "OpenCensus\\Trace\\Propagator\\TraceContextFormatter::deserialize", "doc": "&quot;Generate a SpanContext object from the Trace Context header&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Propagator\\TraceContextFormatter", "fromLink": "OpenCensus/Trace/Propagator/TraceContextFormatter.html", "link": "OpenCensus/Trace/Propagator/TraceContextFormatter.html#method_serialize", "name": "OpenCensus\\Trace\\Propagator\\TraceContextFormatter::serialize", "doc": "&quot;Convert a SpanContext to header string. Uses version 0.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace", "fromLink": "OpenCensus/Trace.html", "link": "OpenCensus/Trace/RequestHandler.html", "name": "OpenCensus\\Trace\\RequestHandler", "doc": "&quot;This class manages the logic for sampling and reporting a trace within a\nsingle request. It is not meant to be used directly -- instead, it should\nbe managed by the RequestTracer as its singleton instance.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestHandler", "fromLink": "OpenCensus/Trace/RequestHandler.html", "link": "OpenCensus/Trace/RequestHandler.html#method___construct", "name": "OpenCensus\\Trace\\RequestHandler::__construct", "doc": "&quot;Create a new RequestHandler.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestHandler", "fromLink": "OpenCensus/Trace/RequestHandler.html", "link": "OpenCensus/Trace/RequestHandler.html#method_onExit", "name": "OpenCensus\\Trace\\RequestHandler::onExit", "doc": "&quot;The function registered as the shutdown function. Cleans up the trace and\nreports using the provided ExporterInterface. Adds additional labels to\nthe root span detected from the response.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestHandler", "fromLink": "OpenCensus/Trace/RequestHandler.html", "link": "OpenCensus/Trace/RequestHandler.html#method_tracer", "name": "OpenCensus\\Trace\\RequestHandler::tracer", "doc": "&quot;Return the tracer used for this request.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestHandler", "fromLink": "OpenCensus/Trace/RequestHandler.html", "link": "OpenCensus/Trace/RequestHandler.html#method_inSpan", "name": "OpenCensus\\Trace\\RequestHandler::inSpan", "doc": "&quot;Instrument a callable by creating a Span that manages the startTime\nand endTime. If an exception is thrown while executing the callable, the\nexception will be caught, the span will be closed, and the exception will\nbe re-thrown.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestHandler", "fromLink": "OpenCensus/Trace/RequestHandler.html", "link": "OpenCensus/Trace/RequestHandler.html#method_startSpan", "name": "OpenCensus\\Trace\\RequestHandler::startSpan", "doc": "&quot;Explicitly start a new Span. You will need to manage finishing the Span,\nincluding handling any thrown exceptions.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestHandler", "fromLink": "OpenCensus/Trace/RequestHandler.html", "link": "OpenCensus/Trace/RequestHandler.html#method_endSpan", "name": "OpenCensus\\Trace\\RequestHandler::endSpan", "doc": "&quot;Explicitly finish the current context (Span).&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestHandler", "fromLink": "OpenCensus/Trace/RequestHandler.html", "link": "OpenCensus/Trace/RequestHandler.html#method_context", "name": "OpenCensus\\Trace\\RequestHandler::context", "doc": "&quot;Return the current context (Span)&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace", "fromLink": "OpenCensus/Trace.html", "link": "OpenCensus/Trace/RequestTracer.html", "name": "OpenCensus\\Trace\\RequestTracer", "doc": "&quot;This class provides static functions to give you access to the current\nrequest&#039;s singleton tracer. You should use this class to instrument your code.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestTracer", "fromLink": "OpenCensus/Trace/RequestTracer.html", "link": "OpenCensus/Trace/RequestTracer.html#method_start", "name": "OpenCensus\\Trace\\RequestTracer::start", "doc": "&quot;Start a new trace session for this request. You should call this as early as\npossible for the most accurate results.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestTracer", "fromLink": "OpenCensus/Trace/RequestTracer.html", "link": "OpenCensus/Trace/RequestTracer.html#method_inSpan", "name": "OpenCensus\\Trace\\RequestTracer::inSpan", "doc": "&quot;Instrument a callable by creating a Span that manages the startTime and endTime.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestTracer", "fromLink": "OpenCensus/Trace/RequestTracer.html", "link": "OpenCensus/Trace/RequestTracer.html#method_startSpan", "name": "OpenCensus\\Trace\\RequestTracer::startSpan", "doc": "&quot;Explicitly start a new Span. You will need to manage finishing the Span,\nincluding handling any thrown exceptions.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestTracer", "fromLink": "OpenCensus/Trace/RequestTracer.html", "link": "OpenCensus/Trace/RequestTracer.html#method_endSpan", "name": "OpenCensus\\Trace\\RequestTracer::endSpan", "doc": "&quot;Explicitly finish the current context (Span).&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestTracer", "fromLink": "OpenCensus/Trace/RequestTracer.html", "link": "OpenCensus/Trace/RequestTracer.html#method_context", "name": "OpenCensus\\Trace\\RequestTracer::context", "doc": "&quot;Return the current context&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\RequestTracer", "fromLink": "OpenCensus/Trace/RequestTracer.html", "link": "OpenCensus/Trace/RequestTracer.html#method_instance", "name": "OpenCensus\\Trace\\RequestTracer::instance", "doc": "&quot;Returns the RequestHandler instance&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Sampler", "fromLink": "OpenCensus/Trace/Sampler.html", "link": "OpenCensus/Trace/Sampler/AlwaysSampleSampler.html", "name": "OpenCensus\\Trace\\Sampler\\AlwaysSampleSampler", "doc": "&quot;This implementation of the SamplerInterface always returns false. Use this\nsampler to attempt to trace all requests. You may be throttled by the server.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\AlwaysSampleSampler", "fromLink": "OpenCensus/Trace/Sampler/AlwaysSampleSampler.html", "link": "OpenCensus/Trace/Sampler/AlwaysSampleSampler.html#method_shouldSample", "name": "OpenCensus\\Trace\\Sampler\\AlwaysSampleSampler::shouldSample", "doc": "&quot;Returns true because we always want to sample.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Sampler", "fromLink": "OpenCensus/Trace/Sampler.html", "link": "OpenCensus/Trace/Sampler/NeverSampleSampler.html", "name": "OpenCensus\\Trace\\Sampler\\NeverSampleSampler", "doc": "&quot;This implementation of the SamplerInterface always returns false. Use this\nsampler to disable all tracing.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\NeverSampleSampler", "fromLink": "OpenCensus/Trace/Sampler/NeverSampleSampler.html", "link": "OpenCensus/Trace/Sampler/NeverSampleSampler.html#method_shouldSample", "name": "OpenCensus\\Trace\\Sampler\\NeverSampleSampler::shouldSample", "doc": "&quot;Returns false because we never want to sample.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Sampler", "fromLink": "OpenCensus/Trace/Sampler.html", "link": "OpenCensus/Trace/Sampler/ProbabilitySampler.html", "name": "OpenCensus\\Trace\\Sampler\\ProbabilitySampler", "doc": "&quot;This implementation of the SamplerInterface uses a pseudo-random number generator\nto sample a percentage of requests.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\ProbabilitySampler", "fromLink": "OpenCensus/Trace/Sampler/ProbabilitySampler.html", "link": "OpenCensus/Trace/Sampler/ProbabilitySampler.html#method___construct", "name": "OpenCensus\\Trace\\Sampler\\ProbabilitySampler::__construct", "doc": "&quot;Creates the ProbabilitySampler&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\ProbabilitySampler", "fromLink": "OpenCensus/Trace/Sampler/ProbabilitySampler.html", "link": "OpenCensus/Trace/Sampler/ProbabilitySampler.html#method_shouldSample", "name": "OpenCensus\\Trace\\Sampler\\ProbabilitySampler::shouldSample", "doc": "&quot;Uses a pseudo-random number generator to decide if we should sample the request.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\ProbabilitySampler", "fromLink": "OpenCensus/Trace/Sampler/ProbabilitySampler.html", "link": "OpenCensus/Trace/Sampler/ProbabilitySampler.html#method_rate", "name": "OpenCensus\\Trace\\Sampler\\ProbabilitySampler::rate", "doc": "&quot;Return the percentage of requests to sample represented as a float between 0 and 1&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Sampler", "fromLink": "OpenCensus/Trace/Sampler.html", "link": "OpenCensus/Trace/Sampler/QpsSampler.html", "name": "OpenCensus\\Trace\\Sampler\\QpsSampler", "doc": "&quot;This implementation of the SamplerInterface uses a cache to limit sampling to\nthe a certain number of queries per second. It requires a PSR-6 cache implementation.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\QpsSampler", "fromLink": "OpenCensus/Trace/Sampler/QpsSampler.html", "link": "OpenCensus/Trace/Sampler/QpsSampler.html#method___construct", "name": "OpenCensus\\Trace\\Sampler\\QpsSampler::__construct", "doc": "&quot;Create a new QpsSampler. If the provided cache is shared between servers,\nthe queries per second will be counted across servers. If the cache is shared\nbetween servers and you wish to sample independently on the servers, provide\nyour own cache key that is different on each server.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\QpsSampler", "fromLink": "OpenCensus/Trace/Sampler/QpsSampler.html", "link": "OpenCensus/Trace/Sampler/QpsSampler.html#method_shouldSample", "name": "OpenCensus\\Trace\\Sampler\\QpsSampler::shouldSample", "doc": "&quot;Returns whether or not the request should be sampled.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\QpsSampler", "fromLink": "OpenCensus/Trace/Sampler/QpsSampler.html", "link": "OpenCensus/Trace/Sampler/QpsSampler.html#method_rate", "name": "OpenCensus\\Trace\\Sampler\\QpsSampler::rate", "doc": "&quot;Return the query-per-second rate&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Sampler", "fromLink": "OpenCensus/Trace/Sampler.html", "link": "OpenCensus/Trace/Sampler/SamplerFactory.html", "name": "OpenCensus\\Trace\\Sampler\\SamplerFactory", "doc": "&quot;The SamplerFactory builds SamplerInterface instances given a variety of\nconfiguration options.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\SamplerFactory", "fromLink": "OpenCensus/Trace/Sampler/SamplerFactory.html", "link": "OpenCensus/Trace/Sampler/SamplerFactory.html#method_build", "name": "OpenCensus\\Trace\\Sampler\\SamplerFactory::build", "doc": "&quot;Builds a sampler given the provided configuration options.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Sampler", "fromLink": "OpenCensus/Trace/Sampler.html", "link": "OpenCensus/Trace/Sampler/SamplerInterface.html", "name": "OpenCensus\\Trace\\Sampler\\SamplerInterface", "doc": "&quot;This interface lets us customize the sampling logic.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Sampler\\SamplerInterface", "fromLink": "OpenCensus/Trace/Sampler/SamplerInterface.html", "link": "OpenCensus/Trace/Sampler/SamplerInterface.html#method_shouldSample", "name": "OpenCensus\\Trace\\Sampler\\SamplerInterface::shouldSample", "doc": "&quot;Returns true if we whould sample the request&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace", "fromLink": "OpenCensus/Trace.html", "link": "OpenCensus/Trace/Span.html", "name": "OpenCensus\\Trace\\Span", "doc": "&quot;This plain PHP class represents a single timed event within a Trace. Spans can\nbe nested and form a trace tree. Often, a trace contains a root span that\ndescribes the end-to-end latency of an operation and, optionally, one or more subspans\nfor its suboperations. Spans do not need to be contiguous. There may be\ngaps between spans in a trace.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method___construct", "name": "OpenCensus\\Trace\\Span::__construct", "doc": "&quot;Instantiate a new Span instance.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_startTime", "name": "OpenCensus\\Trace\\Span::startTime", "doc": "&quot;Retrieve the start time for this span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_setStartTime", "name": "OpenCensus\\Trace\\Span::setStartTime", "doc": "&quot;Set the start time for this span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_endTime", "name": "OpenCensus\\Trace\\Span::endTime", "doc": "&quot;Retrieve the end time for this span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_setEndTime", "name": "OpenCensus\\Trace\\Span::setEndTime", "doc": "&quot;Set the end time for this span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_spanId", "name": "OpenCensus\\Trace\\Span::spanId", "doc": "&quot;Retrieve the ID of this span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_parentSpanId", "name": "OpenCensus\\Trace\\Span::parentSpanId", "doc": "&quot;Retrieve the ID of this span&#039;s parent if it exists.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_name", "name": "OpenCensus\\Trace\\Span::name", "doc": "&quot;Retrieve the name of this span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_labels", "name": "OpenCensus\\Trace\\Span::labels", "doc": "&quot;Retrieve the list of labels for this span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_backtrace", "name": "OpenCensus\\Trace\\Span::backtrace", "doc": "&quot;Retrieve the backtrace at the moment this span was created&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_kind", "name": "OpenCensus\\Trace\\Span::kind", "doc": "&quot;Retrieve the kind of span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_info", "name": "OpenCensus\\Trace\\Span::info", "doc": "&quot;Returns a serializable array representing this span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_addLabels", "name": "OpenCensus\\Trace\\Span::addLabels", "doc": "&quot;Attach labels to this span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Span", "fromLink": "OpenCensus/Trace/Span.html", "link": "OpenCensus/Trace/Span.html#method_addLabel", "name": "OpenCensus\\Trace\\Span::addLabel", "doc": "&quot;Attach a single label to this span.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace", "fromLink": "OpenCensus/Trace.html", "link": "OpenCensus/Trace/SpanContext.html", "name": "OpenCensus\\Trace\\SpanContext", "doc": "&quot;SpanContext encapsulates your current context within your request&#039;s trace. It includes\n3 fields: the &lt;code&gt;traceId&lt;\/code&gt;, the current &lt;code&gt;spanId&lt;\/code&gt;, and an &lt;code&gt;enabled&lt;\/code&gt; flag which indicates whether\nor not the request is being traced.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\SpanContext", "fromLink": "OpenCensus/Trace/SpanContext.html", "link": "OpenCensus/Trace/SpanContext.html#method___construct", "name": "OpenCensus\\Trace\\SpanContext::__construct", "doc": "&quot;Creates a new SpanContext instance&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\SpanContext", "fromLink": "OpenCensus/Trace/SpanContext.html", "link": "OpenCensus/Trace/SpanContext.html#method_traceId", "name": "OpenCensus\\Trace\\SpanContext::traceId", "doc": "&quot;Fetch the current traceId.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\SpanContext", "fromLink": "OpenCensus/Trace/SpanContext.html", "link": "OpenCensus/Trace/SpanContext.html#method_spanId", "name": "OpenCensus\\Trace\\SpanContext::spanId", "doc": "&quot;Fetch the current spanId.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\SpanContext", "fromLink": "OpenCensus/Trace/SpanContext.html", "link": "OpenCensus/Trace/SpanContext.html#method_setSpanId", "name": "OpenCensus\\Trace\\SpanContext::setSpanId", "doc": "&quot;Set the current spanId.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\SpanContext", "fromLink": "OpenCensus/Trace/SpanContext.html", "link": "OpenCensus/Trace/SpanContext.html#method_enabled", "name": "OpenCensus\\Trace\\SpanContext::enabled", "doc": "&quot;Whether or not the request is being traced.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\SpanContext", "fromLink": "OpenCensus/Trace/SpanContext.html", "link": "OpenCensus/Trace/SpanContext.html#method_setEnabled", "name": "OpenCensus\\Trace\\SpanContext::setEnabled", "doc": "&quot;Set whether or not the request is being traced.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\SpanContext", "fromLink": "OpenCensus/Trace/SpanContext.html", "link": "OpenCensus/Trace/SpanContext.html#method_fromHeader", "name": "OpenCensus\\Trace\\SpanContext::fromHeader", "doc": "&quot;Whether or not this context was detected from a request header.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Tracer", "fromLink": "OpenCensus/Trace/Tracer.html", "link": "OpenCensus/Trace/Tracer/ContextTracer.html", "name": "OpenCensus\\Trace\\Tracer\\ContextTracer", "doc": "&quot;This implementation of the TracerInterface manages your trace context throughout\nthe request. It maintains a stack of &lt;code&gt;Span&lt;\/code&gt; records that are currently open\nallowing you to know the current context at any moment.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ContextTracer", "fromLink": "OpenCensus/Trace/Tracer/ContextTracer.html", "link": "OpenCensus/Trace/Tracer/ContextTracer.html#method___construct", "name": "OpenCensus\\Trace\\Tracer\\ContextTracer::__construct", "doc": "&quot;Create a new ContextTracer&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ContextTracer", "fromLink": "OpenCensus/Trace/Tracer/ContextTracer.html", "link": "OpenCensus/Trace/Tracer/ContextTracer.html#method_inSpan", "name": "OpenCensus\\Trace\\Tracer\\ContextTracer::inSpan", "doc": "&quot;Instrument a callable by creating a Span that manages the startTime and endTime.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ContextTracer", "fromLink": "OpenCensus/Trace/Tracer/ContextTracer.html", "link": "OpenCensus/Trace/Tracer/ContextTracer.html#method_startSpan", "name": "OpenCensus\\Trace\\Tracer\\ContextTracer::startSpan", "doc": "&quot;Start a new Span. The start time is already set to the current time.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ContextTracer", "fromLink": "OpenCensus/Trace/Tracer/ContextTracer.html", "link": "OpenCensus/Trace/Tracer/ContextTracer.html#method_endSpan", "name": "OpenCensus\\Trace\\Tracer\\ContextTracer::endSpan", "doc": "&quot;Finish the current context&#039;s Span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ContextTracer", "fromLink": "OpenCensus/Trace/Tracer/ContextTracer.html", "link": "OpenCensus/Trace/Tracer/ContextTracer.html#method_context", "name": "OpenCensus\\Trace\\Tracer\\ContextTracer::context", "doc": "&quot;Return the current context.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ContextTracer", "fromLink": "OpenCensus/Trace/Tracer/ContextTracer.html", "link": "OpenCensus/Trace/Tracer/ContextTracer.html#method_spans", "name": "OpenCensus\\Trace\\Tracer\\ContextTracer::spans", "doc": "&quot;Return the spans collected.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ContextTracer", "fromLink": "OpenCensus/Trace/Tracer/ContextTracer.html", "link": "OpenCensus/Trace/Tracer/ContextTracer.html#method_addLabel", "name": "OpenCensus\\Trace\\Tracer\\ContextTracer::addLabel", "doc": "&quot;Add a label to the current Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ContextTracer", "fromLink": "OpenCensus/Trace/Tracer/ContextTracer.html", "link": "OpenCensus/Trace/Tracer/ContextTracer.html#method_addRootLabel", "name": "OpenCensus\\Trace\\Tracer\\ContextTracer::addRootLabel", "doc": "&quot;Add a label to the primary Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ContextTracer", "fromLink": "OpenCensus/Trace/Tracer/ContextTracer.html", "link": "OpenCensus/Trace/Tracer/ContextTracer.html#method_enabled", "name": "OpenCensus\\Trace\\Tracer\\ContextTracer::enabled", "doc": "&quot;Whether or not this tracer is enabled.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Tracer", "fromLink": "OpenCensus/Trace/Tracer.html", "link": "OpenCensus/Trace/Tracer/ExtensionTracer.html", "name": "OpenCensus\\Trace\\Tracer\\ExtensionTracer", "doc": "&quot;This implementation of the TracerInterface utilizes the opencensus extension\nto manage span context. The opencensus extension augments user created spans and\nadds automatic tracing to several commonly desired events.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ExtensionTracer", "fromLink": "OpenCensus/Trace/Tracer/ExtensionTracer.html", "link": "OpenCensus/Trace/Tracer/ExtensionTracer.html#method___construct", "name": "OpenCensus\\Trace\\Tracer\\ExtensionTracer::__construct", "doc": "&quot;Create a new ExtensionTracer&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ExtensionTracer", "fromLink": "OpenCensus/Trace/Tracer/ExtensionTracer.html", "link": "OpenCensus/Trace/Tracer/ExtensionTracer.html#method_inSpan", "name": "OpenCensus\\Trace\\Tracer\\ExtensionTracer::inSpan", "doc": "&quot;Instrument a callable by creating a Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ExtensionTracer", "fromLink": "OpenCensus/Trace/Tracer/ExtensionTracer.html", "link": "OpenCensus/Trace/Tracer/ExtensionTracer.html#method_startSpan", "name": "OpenCensus\\Trace\\Tracer\\ExtensionTracer::startSpan", "doc": "&quot;Start a new Span. The start time is already set to the current time.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ExtensionTracer", "fromLink": "OpenCensus/Trace/Tracer/ExtensionTracer.html", "link": "OpenCensus/Trace/Tracer/ExtensionTracer.html#method_endSpan", "name": "OpenCensus\\Trace\\Tracer\\ExtensionTracer::endSpan", "doc": "&quot;Finish the current context&#039;s Span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ExtensionTracer", "fromLink": "OpenCensus/Trace/Tracer/ExtensionTracer.html", "link": "OpenCensus/Trace/Tracer/ExtensionTracer.html#method_context", "name": "OpenCensus\\Trace\\Tracer\\ExtensionTracer::context", "doc": "&quot;Return the current context.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ExtensionTracer", "fromLink": "OpenCensus/Trace/Tracer/ExtensionTracer.html", "link": "OpenCensus/Trace/Tracer/ExtensionTracer.html#method_spans", "name": "OpenCensus\\Trace\\Tracer\\ExtensionTracer::spans", "doc": "&quot;Return the spans collected.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ExtensionTracer", "fromLink": "OpenCensus/Trace/Tracer/ExtensionTracer.html", "link": "OpenCensus/Trace/Tracer/ExtensionTracer.html#method_addLabel", "name": "OpenCensus\\Trace\\Tracer\\ExtensionTracer::addLabel", "doc": "&quot;Add a label to the current Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ExtensionTracer", "fromLink": "OpenCensus/Trace/Tracer/ExtensionTracer.html", "link": "OpenCensus/Trace/Tracer/ExtensionTracer.html#method_addRootLabel", "name": "OpenCensus\\Trace\\Tracer\\ExtensionTracer::addRootLabel", "doc": "&quot;Add a label to the primary Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\ExtensionTracer", "fromLink": "OpenCensus/Trace/Tracer/ExtensionTracer.html", "link": "OpenCensus/Trace/Tracer/ExtensionTracer.html#method_enabled", "name": "OpenCensus\\Trace\\Tracer\\ExtensionTracer::enabled", "doc": "&quot;Whether or not this tracer is enabled.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Tracer", "fromLink": "OpenCensus/Trace/Tracer.html", "link": "OpenCensus/Trace/Tracer/NullTracer.html", "name": "OpenCensus\\Trace\\Tracer\\NullTracer", "doc": "&quot;This implementation of the TracerInterface is the null object implementation.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\NullTracer", "fromLink": "OpenCensus/Trace/Tracer/NullTracer.html", "link": "OpenCensus/Trace/Tracer/NullTracer.html#method_inSpan", "name": "OpenCensus\\Trace\\Tracer\\NullTracer::inSpan", "doc": "&quot;Instrument a callable by creating a Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\NullTracer", "fromLink": "OpenCensus/Trace/Tracer/NullTracer.html", "link": "OpenCensus/Trace/Tracer/NullTracer.html#method_startSpan", "name": "OpenCensus\\Trace\\Tracer\\NullTracer::startSpan", "doc": "&quot;Start a new Span. The start time is already set to the current time.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\NullTracer", "fromLink": "OpenCensus/Trace/Tracer/NullTracer.html", "link": "OpenCensus/Trace/Tracer/NullTracer.html#method_endSpan", "name": "OpenCensus\\Trace\\Tracer\\NullTracer::endSpan", "doc": "&quot;Finish the current context&#039;s Span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\NullTracer", "fromLink": "OpenCensus/Trace/Tracer/NullTracer.html", "link": "OpenCensus/Trace/Tracer/NullTracer.html#method_context", "name": "OpenCensus\\Trace\\Tracer\\NullTracer::context", "doc": "&quot;Return the current context.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\NullTracer", "fromLink": "OpenCensus/Trace/Tracer/NullTracer.html", "link": "OpenCensus/Trace/Tracer/NullTracer.html#method_spans", "name": "OpenCensus\\Trace\\Tracer\\NullTracer::spans", "doc": "&quot;Return the spans collected.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\NullTracer", "fromLink": "OpenCensus/Trace/Tracer/NullTracer.html", "link": "OpenCensus/Trace/Tracer/NullTracer.html#method_addLabel", "name": "OpenCensus\\Trace\\Tracer\\NullTracer::addLabel", "doc": "&quot;Add a label to the current Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\NullTracer", "fromLink": "OpenCensus/Trace/Tracer/NullTracer.html", "link": "OpenCensus/Trace/Tracer/NullTracer.html#method_addRootLabel", "name": "OpenCensus\\Trace\\Tracer\\NullTracer::addRootLabel", "doc": "&quot;Add a label to the primary Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\NullTracer", "fromLink": "OpenCensus/Trace/Tracer/NullTracer.html", "link": "OpenCensus/Trace/Tracer/NullTracer.html#method_enabled", "name": "OpenCensus\\Trace\\Tracer\\NullTracer::enabled", "doc": "&quot;Whether or not this tracer is enabled.&quot;"},
            
            {"type": "Class", "fromName": "OpenCensus\\Trace\\Tracer", "fromLink": "OpenCensus/Trace/Tracer.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface", "doc": "&quot;This interface allows you to use the null object pattern for your tracer.&quot;"},
                                                        {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_inSpan", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::inSpan", "doc": "&quot;Instrument a callable by creating a Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_startSpan", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::startSpan", "doc": "&quot;Start a new Span. The start time is already set to the current time.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_endSpan", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::endSpan", "doc": "&quot;Finish the current context&#039;s Span.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_context", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::context", "doc": "&quot;Return the current context.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_spans", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::spans", "doc": "&quot;Return the spans collected.&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_addLabel", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::addLabel", "doc": "&quot;Add a label to the current Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_addRootLabel", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::addRootLabel", "doc": "&quot;Add a label to the primary Span&quot;"},
                    {"type": "Method", "fromName": "OpenCensus\\Trace\\Tracer\\TracerInterface", "fromLink": "OpenCensus/Trace/Tracer/TracerInterface.html", "link": "OpenCensus/Trace/Tracer/TracerInterface.html#method_enabled", "name": "OpenCensus\\Trace\\Tracer\\TracerInterface::enabled", "doc": "&quot;Whether or not this tracer is enabled.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


